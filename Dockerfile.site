FROM golang:1.24 as builder-base
WORKDIR /monorepo
RUN curl -fsSL https://deb.nodesource.com/setup_22.x | bash -
RUN apt-get update
RUN apt-get install -y --no-install-recommends nodejs make
RUN npm i -g pnpm
RUN apt-get clean
RUN rm -rf /var/lib/apt/lists/*

FROM builder-base as river-npm-deps
WORKDIR /monorepo
COPY package.json pnpm-lock.yaml ./
RUN pnpm i --frozen-lockfile
COPY . .
RUN make npmbuild

FROM node:22-alpine as frontend-deps
WORKDIR /monorepo
RUN npm i -g pnpm
COPY --from=river-npm-deps /monorepo/npm_dist ./npm_dist
COPY site/package.json site/pnpm-lock.yaml ./site/
WORKDIR /monorepo/site
RUN pnpm i --frozen-lockfile
COPY site/ ./

FROM builder-base as backend-builder
WORKDIR /monorepo
COPY go.mod go.sum ./
COPY . .
COPY --from=river-npm-deps /monorepo/npm_dist ./npm_dist
COPY --from=frontend-deps /monorepo/site ./site
WORKDIR /monorepo/site
RUN go mod download
RUN npx @tailwindcss/cli -i ./css/tailwind-input.css -o ./css/tailwind-output.css
RUN go run ./go/cmd/build --no-binary
RUN CGO_ENABLED=0 GOOS=linux go build -mod=readonly -v -o /monorepo/__main ./go/cmd/app

FROM alpine:latest as server
WORKDIR /app
RUN apk --no-cache add ca-certificates
COPY --from=backend-builder /monorepo/__main .
RUN adduser -D myuser
USER myuser
ENTRYPOINT ["/app/__main"]
