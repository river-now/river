/////////////////////////////////////////////////////////////////////
/////// Generated by tsgen. DO NOT EDIT.
/////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////
/////// Collection:
/////////////////////////////////////////////////////////////////////

const routes = [
	{
		_type: "loader",
		isRootData: true,
		pattern: "/",
		phantomOutputType: null as unknown as RootData,
	},
	{
		_type: "loader",
		isSplat: true,
		pattern: "/*",
		phantomOutputType: null as unknown as DetailedPage,
	},
	{
		_type: "loader",
		params: ["dyn"],
		pattern: "/__/:dyn",
	},
	{
		_type: "loader",
		pattern: "/_index",
		phantomOutputType: null as unknown as string,
	},
] as const;

/////////////////////////////////////////////////////////////////////
/////// Ad Hoc Types:
/////////////////////////////////////////////////////////////////////

export type DetailedPage = {
	Title?: string;
	Description?: string;
	Date?: string;
	Content?: string;
	URL?: string;
	IsFolder?: boolean;
	Sitemap: Array<SitemapItem>;
	IndexSitemap: Array<SitemapItem>;
	BackItem: string;
};

export type RootData = {
	LatestVersion: string;
};

export type Sitemap = Array<SitemapItem>;

export type SitemapItem = {
	title: string;
	url: string;
	isActive?: boolean;
};

/////////////////////////////////////////////////////////////////////
/////// Extra TS Code:
/////////////////////////////////////////////////////////////////////

type RiverRootData = Extract<
	(typeof routes)[number],
	{ isRootData: true }
>["phantomOutputType"];

export type RiverApp = {
	routes: typeof routes;
	appConfig: typeof riverAppConfig;
	rootData: RiverRootData;
};

export const riverAppConfig = {
	actionsRouterMountRoot: "/api/",
	actionsDynamicRune: ":",
	actionsSplatRune: "*",
	loadersDynamicRune: ":",
	loadersSplatRune: "*",
	loadersExplicitIndexSegment: "_index",
	__phantom: null as unknown as RiverApp,
} as const;

import type {
	RiverLoaderPattern,
	RiverMutationInput,
	RiverMutationOutput,
	RiverMutationPattern,
	RiverMutationProps,
	RiverQueryInput,
	RiverQueryOutput,
	RiverQueryPattern,
	RiverQueryProps,
} from "river.now/client";
import type { RiverRouteProps } from "river.now/solid";

export type QueryPattern = RiverQueryPattern<RiverApp>;
export type QueryProps<P extends QueryPattern> = RiverQueryProps<RiverApp, P>;
export type QueryInput<P extends QueryPattern> = RiverQueryInput<RiverApp, P>;
export type QueryOutput<P extends QueryPattern> = RiverQueryOutput<RiverApp, P>;

export type MutationPattern = RiverMutationPattern<RiverApp>;
export type MutationProps<P extends MutationPattern> = RiverMutationProps<
	RiverApp,
	P
>;
export type MutationInput<P extends MutationPattern> = RiverMutationInput<
	RiverApp,
	P
>;
export type MutationOutput<P extends MutationPattern> = RiverMutationOutput<
	RiverApp,
	P
>;

export type RouteProps<P extends RiverLoaderPattern<RiverApp>> =
	RiverRouteProps<RiverApp, P>;

/////////////////////////////////////////////////////////////////////
/////// River Vite Config:
/////////////////////////////////////////////////////////////////////

export const staticPublicAssetMap = {
	"desktop.svg": "river_out_desktop_eebc981612eb.svg",
	"favicon.svg": "river_out_favicon_d4e72b60e709.svg",
	"fonts/jetbrains_mono.woff2": "river_out_fonts_jetbrains_mono_1e06740a02a4.woff2",
	"fonts/jetbrains_mono_ext.woff2": "river_out_fonts_jetbrains_mono_ext_7db7affbce1f.woff2",
	"fonts/jetbrains_mono_italic.woff2": "river_out_fonts_jetbrains_mono_italic_6548575d6839.woff2",
	"fonts/jetbrains_mono_italic_ext.woff2": "river_out_fonts_jetbrains_mono_italic_ext_bdce8a4f00f6.woff2",
	"moon.svg": "river_out_moon_7e0c08985ebe.svg",
	"river-banner.webp": "river_out_river-banner_87c38a5b8c35.webp",
	"sun.svg": "river_out_sun_338b26f6045d.svg"
} as const;

export type StaticPublicAsset = keyof typeof staticPublicAssetMap;

declare global {
	function hashedURL(
		staticPublicAsset: StaticPublicAsset,
	): string;
}

export const publicPathPrefix = "/";

export function waveRuntimeURL(
	originalPublicURL: StaticPublicAsset,
) {
	const url = staticPublicAssetMap[originalPublicURL] ?? originalPublicURL;
	return publicPathPrefix + url;
}

export const riverViteConfig = {
	rollupInput: [
		"frontend/src/components/dyn.tsx",
		"frontend/src/components/home.tsx",
		"frontend/src/components/md.tsx",
		"frontend/src/entry.tsx"
	],
	publicPathPrefix,
	staticPublicAssetMap,
	buildtimePublicURLFuncName: "hashedURL",
	ignoredPatterns: [
		"**/*.go",
		"**/backend/dist/**/*",
		"**/backend/assets/**/*",
		"**/backend/wave.config.json",
		"**/frontend/src/river.gen.ts",
		"**/frontend/src/routes.ts"
	],
	dedupeList: [
		"solid-js",
		"solid-js/web"
	],
} as const;
