import {
	useLoaderData,
	usePatternLoaderData,
	useRouterData,
} from "./app_utils.tsx";
import type { RouteProps } from "./river.gen.ts";

export function About(props: RouteProps<"/about">) {
	const data = useLoaderData(props);

	return (
		<div style={{.StylePropOpen}} {{.BackgroundColorKey}}: "indigo", padding: "4px 24px" {{.StylePropClose}}>
			<h1>About</h1>
			<p>{data{{.Call}}}</p>

			{/* RENDERS CHILDREN */}
			<props.Outlet />
		</div>
	);
}

export function Location(props: RouteProps<"/about/location">) {
	const data = useLoaderData(props);

	// If you need to load data from a parent's loader, you can use this hook.
	// Usually, this is a bit of a hack, but it's there if you need it.
	const patternData = usePatternLoaderData("/about");
	console.log("This is from a parent loader: ", patternData{{.Call}});

	return (
		<div style={{.StylePropOpen}} {{.BackgroundColorKey}}: "#003", padding: "4px 24px" {{.StylePropClose}}>
			<h2>Location</h2>
			<p>{data{{.Call}}}</p>
		</div>
	);
}

export function Hobbies(props: RouteProps<"/about/hobbies">) {
	const data = useLoaderData(props);
	return (
		<div style={{.StylePropOpen}} {{.BackgroundColorKey}}: "#030", padding: "4px 24px" {{.StylePropClose}}>
			<h2>Hobbies</h2>
			<p>{data{{.Call}}}</p>
		</div>
	);
}

export function Dynamic(props: RouteProps<"/about/:id">) {
	const data = useRouterData(props);

	return (
		<div style={{.StylePropOpen}} {{.BackgroundColorKey}}: "#300", padding: "4px 24px" {{.StylePropClose}}>
			<h2>Dynamic</h2>
			<p>ID: {data{{.Call}}.params.id}</p>
		</div>
	);
}

export function Splat(props: RouteProps<"/about/*">) {
	const data = useRouterData(props);

	return (
		<div style={{.StylePropOpen}} {{.BackgroundColorKey}}: "#520", padding: "4px 24px" {{.StylePropClose}}>
			<h2>Splat</h2>
			<p>Splat Values: {JSON.stringify(data{{.Call}}.splatValues)}</p>
		</div>
	);
}
